{
  "name": "momentum-email-system",
  "version": "2.0.0",
  "description": "Enterprise email campaign system with environment configuration and deployment automation",
  "main": "dist/index.js",
  "scripts": {
    "build": "tsc",
    "dev": "tsx src/index.ts",
    "test-campaign": "tsx test-campaign.ts",
    "simple-test": "tsx simple-campaign-test.ts",
    "advanced-demo": "tsx advanced-demo.ts",
    "import-contacts": "tsx import-contacts.ts",
    "start": "node dist/index.js",
    "lint": "eslint src --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,json}\"",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "deploy": "tsx scripts/deploy.ts",
    "deploy:dev": "tsx scripts/deploy.ts dev",
    "deploy:staging": "tsx scripts/deploy.ts staging",
    "deploy:prod": "tsx scripts/deploy.ts prod",
    "deploy:functions": "tsx scripts/deploy.ts functions",
    "deploy:full": "tsx scripts/deploy.ts full",
    "deploy:status": "tsx scripts/deploy.ts status",
    "deploy:validate": "tsx scripts/deploy.ts validate",
    "deploy:dry-run": "tsx scripts/deploy.ts full --dry-run",
    "migrate": "tsx scripts/migrations/migration-runner.ts migrate",
    "migrate:dev": "tsx scripts/migrations/migration-runner.ts migrate development",
    "migrate:staging": "tsx scripts/migrations/migration-runner.ts migrate staging",
    "migrate:prod": "tsx scripts/migrations/migration-runner.ts migrate production",
    "migrate:status": "tsx scripts/migrations/migration-runner.ts status",
    "migrate:validate": "tsx scripts/migrations/migration-runner.ts validate",
    "migrate:rollback": "tsx scripts/migrations/migration-runner.ts rollback",
    "migrate:init": "tsx scripts/migrations/migration-runner.ts init",
    "backup": "tsx scripts/backup/backup-manager.ts",
    "backup:full": "tsx scripts/backup/backup-manager.ts full",
    "backup:incremental": "tsx scripts/backup/backup-manager.ts incremental",
    "backup:config": "tsx scripts/backup/backup-manager.ts config",
    "backup:list": "tsx scripts/backup/backup-manager.ts list",
    "backup:cleanup": "tsx scripts/backup/backup-manager.ts cleanup",
    "backup:verify": "tsx scripts/backup/backup-manager.ts verify",
    "backup:restore": "tsx scripts/backup/backup-manager.ts restore",
    "monitor": "tsx src/services/monitoring.service.ts",
    "monitor:health": "tsx scripts/monitoring/health-check.ts",
    "monitor:metrics": "tsx scripts/monitoring/collect-metrics.ts",
    "monitor:alerts": "tsx scripts/monitoring/check-alerts.ts",
    "monitor:dashboard": "tsx scripts/monitoring/dashboard.ts",
    "env:setup": "tsx scripts/env/setup-environment.ts",
    "env:validate": "tsx scripts/env/validate-environment.ts",
    "env:switch": "tsx scripts/env/switch-environment.ts",
    "env:compare": "tsx scripts/env/compare-environments.ts",
    "cron:setup": "tsx scripts/deploy.ts cron-jobs",
    "cron:status": "tsx scripts/cron/cron-status.ts",
    "cron:logs": "tsx scripts/cron/cron-logs.ts",
    "cron:restart": "tsx scripts/cron/restart-jobs.ts",
    "supabase:start": "supabase start",
    "supabase:stop": "supabase stop",
    "supabase:reset": "supabase db reset",
    "supabase:push": "supabase db push",
    "supabase:functions:deploy": "supabase functions deploy",
    "supabase:functions:logs": "supabase functions logs",
    "security-scan": "npm audit && tsx scripts/security/scan.ts",
    "smoke-test:dev": "tsx scripts/tests/smoke-test.ts development",
    "smoke-test:staging": "tsx scripts/tests/smoke-test.ts staging",
    "smoke-test:production": "tsx scripts/tests/smoke-test.ts production",
    "health-check:dev": "tsx scripts/monitoring/health-check.ts development",
    "health-check:staging": "tsx scripts/monitoring/health-check.ts staging",
    "health-check:production": "tsx scripts/monitoring/health-check.ts production",
    "docs:generate": "typedoc src --out docs/api",
    "docs:serve": "serve docs",
    "clean": "rimraf dist coverage .nyc_output",
    "prebuild": "npm run clean",
    "prestart": "npm run build"
  },
  "keywords": [
    "email",
    "campaign",
    "supabase",
    "mailtrap",
    "typescript",
    "enterprise"
  ],
  "author": "Momentum Business Capital",
  "license": "MIT",
  "dependencies": {
    "@supabase/supabase-js": "^2.38.5",
    "@types/uuid": "^10.0.0",
    "dompurify": "^3.2.6",
    "dotenv": "^16.3.1",
    "handlebars": "^4.7.8",
    "html-to-text": "^9.0.5",
    "isomorphic-dompurify": "^2.26.0",
    "nock": "^14.0.5",
    "nodemailer": "^6.9.7",
    "uuid": "^11.1.0",
    "vitest": "^3.2.4"
  },
  "devDependencies": {
    "@types/jest": "^29.5.8",
    "@types/node": "^20.9.0",
    "@types/nodemailer": "^6.4.14",
    "@typescript-eslint/eslint-plugin": "^6.11.0",
    "@typescript-eslint/parser": "^6.11.0",
    "commander": "^11.1.0",
    "eslint": "^8.53.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "prettier": "^3.0.3",
    "rimraf": "^5.0.5",
    "serve": "^14.2.1",
    "ts-jest": "^29.1.1",
    "tsx": "^4.1.2",
    "typedoc": "^0.25.4",
    "typescript": "^5.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/momentum-business-capital/momentum-email-2.0.git"
  },
  "bugs": {
    "url": "https://github.com/momentum-business-capital/momentum-email-2.0/issues"
  },
  "homepage": "https://github.com/momentum-business-capital/momentum-email-2.0#readme"
}
